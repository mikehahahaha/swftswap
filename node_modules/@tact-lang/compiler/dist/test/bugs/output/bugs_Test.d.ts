import { Cell, Slice, Address, Builder, Dictionary, ContractProvider, Contract, ContractABI } from '@ton/core';
export type StateInit = {
    $$type: 'StateInit';
    code: Cell;
    data: Cell;
};
export declare function storeStateInit(src: StateInit): (builder: Builder) => void;
export declare function loadStateInit(slice: Slice): {
    $$type: "StateInit";
    code: Cell;
    data: Cell;
};
export type Context = {
    $$type: 'Context';
    bounced: boolean;
    sender: Address;
    value: bigint;
    raw: Cell;
};
export declare function storeContext(src: Context): (builder: Builder) => void;
export declare function loadContext(slice: Slice): {
    $$type: "Context";
    bounced: boolean;
    sender: Address;
    value: bigint;
    raw: Cell;
};
export type SendParameters = {
    $$type: 'SendParameters';
    bounce: boolean;
    to: Address;
    value: bigint;
    mode: bigint;
    body: Cell | null;
    code: Cell | null;
    data: Cell | null;
};
export declare function storeSendParameters(src: SendParameters): (builder: Builder) => void;
export declare function loadSendParameters(slice: Slice): {
    $$type: "SendParameters";
    bounce: boolean;
    to: Address;
    value: bigint;
    mode: bigint;
    body: Cell | null;
    code: Cell | null;
    data: Cell | null;
};
export type TokenInfo = {
    $$type: 'TokenInfo';
    ticker: string;
    decimals: bigint;
};
export declare function storeTokenInfo(src: TokenInfo): (builder: Builder) => void;
export declare function loadTokenInfo(slice: Slice): {
    $$type: "TokenInfo";
    ticker: string;
    decimals: bigint;
};
export type Replace = {
    $$type: 'Replace';
    items: Dictionary<bigint, Address>;
};
export declare function storeReplace(src: Replace): (builder: Builder) => void;
export declare function loadReplace(slice: Slice): {
    $$type: "Replace";
    items: Dictionary<bigint, Address>;
};
export type Mint = {
    $$type: 'Mint';
    amount: bigint;
    receiver: Address;
};
export declare function storeMint(src: Mint): (builder: Builder) => void;
export declare function loadMint(slice: Slice): {
    $$type: "Mint";
    amount: bigint;
    receiver: Address;
};
export type JettonData = {
    $$type: 'JettonData';
    totalSupply: bigint;
    mintable: boolean;
    owner: Address;
    content: Cell;
    walletCode: Cell;
};
export declare function storeJettonData(src: JettonData): (builder: Builder) => void;
export declare function loadJettonData(slice: Slice): {
    $$type: "JettonData";
    totalSupply: bigint;
    mintable: boolean;
    owner: Address;
    content: Cell;
    walletCode: Cell;
};
export type TokenTransfer = {
    $$type: 'TokenTransfer';
    queryId: bigint;
    amount: bigint;
    destination: Address;
    response_destination: Address;
    custom_payload: Cell | null;
    forward_ton_amount: bigint;
    forward_payload: Cell;
};
export declare function storeTokenTransfer(src: TokenTransfer): (builder: Builder) => void;
export declare function loadTokenTransfer(slice: Slice): {
    $$type: "TokenTransfer";
    queryId: bigint;
    amount: bigint;
    destination: Address;
    response_destination: Address;
    custom_payload: Cell | null;
    forward_ton_amount: bigint;
    forward_payload: Cell;
};
export type TokenTransferInternal = {
    $$type: 'TokenTransferInternal';
    queryId: bigint;
    amount: bigint;
    from: Address;
    response_destination: Address;
    forward_ton_amount: bigint;
    forward_payload: Cell;
};
export declare function storeTokenTransferInternal(src: TokenTransferInternal): (builder: Builder) => void;
export declare function loadTokenTransferInternal(slice: Slice): {
    $$type: "TokenTransferInternal";
    queryId: bigint;
    amount: bigint;
    from: Address;
    response_destination: Address;
    forward_ton_amount: bigint;
    forward_payload: Cell;
};
export type TokenNotification = {
    $$type: 'TokenNotification';
    queryId: bigint;
    amount: bigint;
    from: Address;
    forward_payload: Cell;
};
export declare function storeTokenNotification(src: TokenNotification): (builder: Builder) => void;
export declare function loadTokenNotification(slice: Slice): {
    $$type: "TokenNotification";
    queryId: bigint;
    amount: bigint;
    from: Address;
    forward_payload: Cell;
};
export type TokenBurn = {
    $$type: 'TokenBurn';
    queryId: bigint;
    amount: bigint;
    owner: Address;
    response_destination: Address;
};
export declare function storeTokenBurn(src: TokenBurn): (builder: Builder) => void;
export declare function loadTokenBurn(slice: Slice): {
    $$type: "TokenBurn";
    queryId: bigint;
    amount: bigint;
    owner: Address;
    response_destination: Address;
};
export type TokenBurnNotification = {
    $$type: 'TokenBurnNotification';
    queryId: bigint;
    amount: bigint;
    owner: Address;
    response_destination: Address | null;
};
export declare function storeTokenBurnNotification(src: TokenBurnNotification): (builder: Builder) => void;
export declare function loadTokenBurnNotification(slice: Slice): {
    $$type: "TokenBurnNotification";
    queryId: bigint;
    amount: bigint;
    owner: Address;
    response_destination: Address | null;
};
export type TokenExcesses = {
    $$type: 'TokenExcesses';
    queryId: bigint;
};
export declare function storeTokenExcesses(src: TokenExcesses): (builder: Builder) => void;
export declare function loadTokenExcesses(slice: Slice): {
    $$type: "TokenExcesses";
    queryId: bigint;
};
export type TokenUpdateContent = {
    $$type: 'TokenUpdateContent';
    content: Cell;
};
export declare function storeTokenUpdateContent(src: TokenUpdateContent): (builder: Builder) => void;
export declare function loadTokenUpdateContent(slice: Slice): {
    $$type: "TokenUpdateContent";
    content: Cell;
};
export type JettonWalletData = {
    $$type: 'JettonWalletData';
    balance: bigint;
    owner: Address;
    master: Address;
    walletCode: Cell;
};
export declare function storeJettonWalletData(src: JettonWalletData): (builder: Builder) => void;
export declare function loadJettonWalletData(slice: Slice): {
    $$type: "JettonWalletData";
    balance: bigint;
    owner: Address;
    master: Address;
    walletCode: Cell;
};
export type Deploy = {
    $$type: 'Deploy';
    queryId: bigint;
};
export declare function storeDeploy(src: Deploy): (builder: Builder) => void;
export declare function loadDeploy(slice: Slice): {
    $$type: "Deploy";
    queryId: bigint;
};
export type DeployOk = {
    $$type: 'DeployOk';
    queryId: bigint;
};
export declare function storeDeployOk(src: DeployOk): (builder: Builder) => void;
export declare function loadDeployOk(slice: Slice): {
    $$type: "DeployOk";
    queryId: bigint;
};
export type FactoryDeploy = {
    $$type: 'FactoryDeploy';
    queryId: bigint;
    cashback: Address;
};
export declare function storeFactoryDeploy(src: FactoryDeploy): (builder: Builder) => void;
export declare function loadFactoryDeploy(slice: Slice): {
    $$type: "FactoryDeploy";
    queryId: bigint;
    cashback: Address;
};
export type ChangeOwner = {
    $$type: 'ChangeOwner';
    queryId: bigint;
    newOwner: Address;
};
export declare function storeChangeOwner(src: ChangeOwner): (builder: Builder) => void;
export declare function loadChangeOwner(slice: Slice): {
    $$type: "ChangeOwner";
    queryId: bigint;
    newOwner: Address;
};
export type ChangeOwnerOk = {
    $$type: 'ChangeOwnerOk';
    queryId: bigint;
    newOwner: Address;
};
export declare function storeChangeOwnerOk(src: ChangeOwnerOk): (builder: Builder) => void;
export declare function loadChangeOwnerOk(slice: Slice): {
    $$type: "ChangeOwnerOk";
    queryId: bigint;
    newOwner: Address;
};
export declare class Test implements Contract {
    static init(): Promise<{
        code: Cell;
        data: Cell;
    }>;
    static fromInit(): Promise<Test>;
    static fromAddress(address: Address): Test;
    readonly address: Address;
    readonly init?: {
        code: Cell;
        data: Cell;
    };
    readonly abi: ContractABI;
    private constructor();
    getGetTest0(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest1(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest2(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest3(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest4(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest5(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest6(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest7(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest8(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest9(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest10(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest11(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest12(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest13(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest14(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest15(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest16(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest17(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest18(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest19(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest20(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest21(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest22(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest23(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest24(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest25(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest26(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest27(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest28(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest29(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest30(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest31(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest32(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest33(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest34(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest35(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest36(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest37(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest38(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest39(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest40(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest41(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest42(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest43(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest44(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest45(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest46(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest47(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest48(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest49(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest50(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest51(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest52(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest53(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest54(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest55(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest56(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest57(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest58(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest59(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest60(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest61(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest62(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest63(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest64(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest65(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest66(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest67(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest68(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest69(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest70(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest71(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest72(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest73(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest74(provider: ContractProvider, index: bigint): Promise<bigint | null>;
    getGetTest75(provider: ContractProvider, index: bigint): Promise<bigint | null>;
}
